---
- name: 'Disable SELinux on Nagios server'
  selinux:
    policy: 'targeted'
    state: 'permissive'
  tags: 'core'

- name: 'Create directory to unpack Nagios'
  file: 
    path: '{{ nagios_dir }}'
    owner: 'root'
    group: 'root'
    mode: '0755'
    state: 'directory'
  tags: 
    - 'core'
    - 'always'

- name: 'Unpack Nagios installer'
  unarchive:
    src: 'nagios-{{ nagios_version }}.tar.gz'
    dest: '{{ nagios_dir }}'
    creates: '{{ nagios_dir }}/nagios-{{nagios_version}}/configure'
  register: 'install'
  tags: 'core'

- name: 'Compile and install Nagios'
  command: '{{ item }}'
  args:
    chdir: '{{ nagios_dir }}/nagios-{{ nagios_version }}'
  when: 'install.changed'
  with_items:
    - 'bash configure'
    - 'make all'
    - 'make install'
    - 'make install-init'
    - 'make install-config'
    - 'make install-webconf'
  notify: 'restart Nagios'
  tags: 'core'

- name: "Ensure the 'rw' directory exists (This looks like a bug)"
  file:
    path: '/usr/local/nagios/var/rw'
    owner: 'nagios'
    group: 'nagios'
    mode: '0755'
    state: 'directory'
  tags: 'core'

- name: 'Create Nagios user'
  shell: 'echo {{ nagios_password }} | htpasswd -i -c /usr/local/nagios/etc/htpasswd.users {{ nagios_user }}'
  args:
    creates: '/usr/local/nagios/etc/htpasswd.users'
  tags: 'core'


- name: 'Grant Nagios user administrative access'
  lineinfile:
    path: '/usr/local/nagios/etc/cgi.cfg'
    line: '{{ item.key }}={{ item.value.admins[0] }},{{ item.value.admins[1] }}'
    regexp: '.*{{ item.key }}='
    state: 'present'
  with_dict: '{{ permissions }}'
  tags: 'core'

- name: 'Create the nagios account, and add the account to the apache group'
  user:
    name: 'nagios'
    comment: 'Account used to manage the Nagios service'
    groups: 'apache'
    state: 'present'
  tags: 'core'


